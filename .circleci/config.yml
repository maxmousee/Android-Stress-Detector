#
# Build configuration for Circle CI
#
version: 2
jobs:
  build:
    working_directory: ~/Android-Stress-Detector
    docker:
      - image: circleci/android:api-28-alpha
    parallelism: 4
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - run:
          name: Setup permission
          command: chmod +x gradlew
      - run:
          name: Android SDK Platform 28
          command: if [ ! -d "/usr/local/android-sdk-linux/platforms/android-28" ]; then echo y | android update sdk --no-ui --all --filter "android-28"; fi
          environment:
            TERM: dumb
      - run:
          name: Android SDK Build-tools
          command: if [ ! -d "/usr/local/android-sdk-linux/build-tools/28.0.0" ]; then echo y | android update sdk --no-ui --all --filter "build-tools-28.0.0"; fi
          environment:
            TERM: dumb
      - run:
          name: Android Support Repository
          command: if [ ! -d "/usr/local/android-sdk-linux/extras/android/m2repository/com/android/support/design/28.0.0" ]; then echo y | android update sdk --no-ui --all --filter "extra-android-m2repository"; fi
          environment:
            TERM: dumb
      - run:
          name: Install Android SDK platforms API Level 28
          command: echo y | $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-28"
          environment:
            TERM: dumb
      - run:
          name: Install Android SDK platform-tools 
          command: echo y | $ANDROID_HOME/tools/bin/sdkmanager "platform-tools"
          environment:
            TERM: dumb
      - run:
          name: Install Android SDK build tools
          command: echo y | $ANDROID_HOME/tools/bin/sdkmanager "build-tools;28.0.0"
          environment:
            TERM: dumb
      - run:
          name: Download Android NDK
          command: echo y | cd $ANDROID_HOME; sudo curl -L -o ndk.zip https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip
          environment:
            TERM: dumb
      - run:
          name: Install Android NDK
          command: echo y | cd $ANDROID_HOME; sudo unzip -o -q ndk.zip; ANDROID_NDK="$ANDROID_HOME/android-ndk-r18b"; echo 'export ANDROID_NDK=$ANDROID_HOME/android-ndk-r18b' >> $BASH_ENV echo 'export ANDROID_NDK_HOME=$ANDROID_HOME/android-ndk-r18b/' >> $BASH_ENV; ls;
          environment:
            TERM: dumb
      - run:
          name: Accept Android Licenses
          command: mkdir -p "/opt/android/sdk/licenses" && echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "/opt/android/sdk/licenses/android-sdk-license" && echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "/opt/android/sdk/licenses/android-sdk-preview-license" 
          environment:
            TERM: dumb
      - run:
          name: Run Gradle Lint
          command: ./gradlew --configure-on-demand lint
          environment:
            TERM: dumb
      - run:
          name: Run Unit Tests
          command: ./gradlew --configure-on-demand test
          environment:
            TERM: dumb
      - run:
          name: Install custom system image
          command: echo y | $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-19;default;armeabi-v7a"
          environment:
            TERM: dumb
      - run:
          name: Setup emulator
          command: echo no | $ANDROID_HOME/tools/bin/avdmanager create avd -n testEmulator -k "system-images;android-19;default;armeabi-v7a"
          environment:
            TERM: dumb
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd testEmulator -noaudio -no-boot-anim -no-window -accel on -memory 1024
          background: true
      - run:
            name: Wait emulator
            command: |
              # wait for it to have booted
              circle-android wait-for-boot
              # unlock the emulator screen
              sleep 30
              adb shell input keyevent 82
      - run:
          name: Run Instrumented Tests
          command: ./gradlew --configure-on-demand connectedAndroidTest
          environment:
            TERM: dumb
      - store_artifacts:
          path: app/build/reports
          destination: reports
      - store_test_results:
          path: app/build/test-results
